#!/usr/bin/env python 
# -*- coding: utf-8 -*- 
# @Time : 2020/5/18 9:10
# @Author : Lemon_Tricy
# @QQ: 2378807189
# Copyright：湖南省零檬信息技术有限公司


# 变量： 保险柜 -- 存折 ，钱，金条，贵重首饰  ； 砖头 ， 猪肉。。。
# --- 存储数据
# 标识符命名规则：5、 必须要先申明，才可以被调用
scb13 = '丢丢是速成班13期最美！'  # 创建了一个变量，取名字 scb13，存数据-赋值  === 初始化，变量声明
# print(scb13)   # 引用变量名

'''
# 数据类型： 8大数据类型-- 整型（int），浮点型（float），布尔型（bool：True（1），False（0））: 运算符，控制流
# 字符串，列表，字典，元组，集合
'''
print(type(False))
# print(type(12))   # type()---python一个内置函数：判断数据类型
# print(type(3.1415926))
# print(type(True))
# # 字符串(str)： 用成对引号括起来的内容：单引号， 双引号，三引号  --字符串
# # 1、 引号的嵌套
# # 2、 保持格式，换行 --  所见即所得
# print('"丢丢"是'
#       '速成班13期'
#       '最美！' )
# print(type("柚子是速成班13期第二美！" ))
# print('''猹是速成班13期最帅！-------
# 身高：185
#    体重：150
#        颜值： 9.9
# ''')
'''
1、 字符串的取值：元素是有顺序的，位置上编号-- 索引：从0开始，依次加1
2、 取多个值： 切片---  [索引头（开始--默认值0）:索引尾（结束--默认值结尾）:步长(默认值1)]： 取头不取尾
3、 取最后一个元素 -- -1， 逆序输出： 步长-1
4、 取数据长度： len() --取长度
'''

str1 = '猹是速成班13期最帅！'   # 定义了一个字符串，赋值给了一个变量
# #       0 1 2 3 45 67 8 910
# print(str1[0])   # 索引去取值
# print(str1[0:len(str1)-1:])
# print(str1[::-1])
# print(len(str1))  # 取str1的长度，打印出来

# 需要在字符串里 传入变量  --- 格式化输出： ，.format()
# 占位置--占位符 : {} ：1） 默认顺序：按照变量传入顺序  2）指定顺序传入-- 不关心变量的顺序
# 注意：不能编号和不编号混合使用
# % -- 扩展

# name = "阿培"
# height = 185
# weight = 150
# age = 18
# print('''------{0}是速成班13期最帅！-------
# name：{1}
# 身高：{3}
# 体重：{2}
# 年龄：{4}
# '''.format(name,name,height,weight,age
#            )
#       )

# python运算符 ： 1 + 1 = 2 ， 运算数， 运算符
'''
1、算术运算符： + - * / % 
+ : 1) 表示两个数字相加之后的结果  2) 还可以表示字符串的拼接 
3) 不能字符串 + 数字-- 转化为字符串=str()-- 内置函数：转化为字符串类型的数据 ： int(),float(),bool()
- :  表示两个数字相减之后的结果, 不支持字符串相减
* ： 1) 表示两个数字相乘之后的结果  2) 字符串重复输入 
/: 
%： 取余

2、赋值运算符： =  +=   -=
3、比较运算符： > >= < <=   ==  !=  : 结果是布尔值 
4、逻辑运算符： 与-- and(真真为真)， 或--or（假假为假）， 非--not --- 结果是布尔值 
5、成员运算符： in   not in   == 结果是布尔值 
'''
print(not 10 > 20 )
# print("abc" != "abc")  # 断言
str3 = "hello world!"
print("h" not in str3)

# print(10 + 20)
# print("abc" + "edf")
# print(str(123) + 'qwe')
# print(30 - 10)
# print("abcd" - "ab") --不支持的
# print( 2 * 3)
# print("I love you" * 3000)
# print(10 / 2)  # 结果是浮点型
# print(10 % 3)

# a = 10
# a += 10 # ===== a = a + 10
# a -= 5
# print(a)